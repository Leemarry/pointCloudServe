<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bear.reseeding.dao.EfBusinessDao">

<resultMap type="com.bear.reseeding.entity.EfTowerLine" id="EfTowerLineMap">
    <result property="id" column="id" jdbcType="INTEGER"/>
    <result property="mark" column="mark" jdbcType="VARCHAR"/>
    <result property="startTowerMark" column="start_tower_mark" jdbcType="VARCHAR"/>
    <result property="endTowerMark" column="end_tower_mark" jdbcType="VARCHAR"/>
    <result property="lineLength" column="line_length" jdbcType="DOUBLE"/>
    <result property="lineLengthStr" column="line_length_str" jdbcType="VARCHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="des" column="des" jdbcType="VARCHAR"/>
</resultMap>

    <resultMap type="com.bear.reseeding.entity.EfTowerLine" id="EfTowerLineAndPhotoMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="mark" column="mark" jdbcType="VARCHAR"/>
        <result property="startTowerMark" column="start_tower_mark" jdbcType="VARCHAR"/>
        <result property="endTowerMark" column="end_tower_mark" jdbcType="VARCHAR"/>
        <result property="lineLength" column="line_length" jdbcType="DOUBLE"/>
        <result property="lineLengthStr" column="line_length_str" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="des" column="des" jdbcType="VARCHAR"/>
        <!--  photos 的  tower_id 与 EfTower 的tower_id相等     -->
        <collection property="startphotos" column="start_tower_mark"
                    select="com.bear.reseeding.dao.EfMediaDao.getPhotosByTowerMark2"
                    ofType="com.bear.reseeding.entity.EfPhoto"/>
        <collection property="endphotos" column="end_tower_mark"
                    select="com.bear.reseeding.dao.EfMediaDao.getPhotosByTowerMark2"
                    ofType="com.bear.reseeding.entity.EfPhoto"/>
        <collection property="photos" column="mark"
                    select="com.bear.reseeding.dao.EfMediaDao.getPhotosByTowerMark2"
                    ofType="com.bear.reseeding.entity.EfPhoto"/>
    </resultMap>


    <select id="getTowerLinesByTowerMark" resultMap="EfTowerLineMap">
        select * from tower_line where start_tower_mark = #{towerMark} or end_tower_mark = #{towerMark}
    </select>

    <select id="getTowerLineList" resultMap="EfTowerLineAndPhotoMap">
        select * from tower_line
        <where>
            <if test="mark!=null">
                mark = #{mark}
            </if>
            <if test="1==1">
                AND create_time BETWEEN #{startDate} AND #{endDate}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <delete id="delectTowerLine">
        delete from tower_line where id = #{id}
    </delete>

    <insert id="addOrupdateLine" keyProperty="id" useGeneratedKeys="true">
        insert into tower_line(id, mark, start_tower_mark, end_tower_mark, line_length, create_time, des,line_length_str)
        values( #{id}, #{mark}, #{startTowerMark}, #{endTowerMark}, #{lineLength}, #{createTime}, #{des}, #{lineLengthStr})
        ON DUPLICATE KEY UPDATE
        start_tower_mark = #{startTowerMark},
        end_tower_mark = #{endTowerMark},
        line_length = #{lineLength},
        create_time = #{createTime},
        des = #{des},
        line_length_str = #{lineLengthStr}
    </insert>


    <insert id="batchInsertLine" keyProperty="id" useGeneratedKeys="true">
        insert into tower_line (id, mark, start_tower_mark, end_tower_mark, line_length, create_time, des,line_length_str)
        values
        <foreach collection="lineList" item="entity" separator=",">
            (#{entity.id}, #{entity.mark}, #{entity.startTowerMark}, #{entity.endTowerMark}, #{entity.lineLength}, #{entity.createTime}, #{entity.des}, #{entity.lineLengthStr})
        </foreach>
    </insert>

    <select id="queryTowerlineBymark" resultMap="EfTowerLineMap">
        select * from tower_line where mark = #{mark}
    </select>



</mapper>

