<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bear.reseeding.dao.EfMediaDao">

    <resultMap type="com.bear.reseeding.entity.EfPointCloud" id="EfCloudMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="mark" column="mark" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="originType" column="origin_type" jdbcType="VARBINARY"/>
        <result property="originSize" column="origin_size" jdbcType="DOUBLE"/>
        <result property="originCloudUrl" column="origin_cloud_url" jdbcType="VARCHAR"/>
        <result property="amendType" column="amend_type" jdbcType="VARBINARY"/>
        <result property="amendCloudUrl" column="amend_cloud_url" jdbcType="VARBINARY"/>
        <result property="amendSize" column="amend_size" jdbcType="DOUBLE"/>
        <result property="formats" column="formats" jdbcType="VARCHAR"/>
        <result property="webSize" column="web_size" jdbcType="DOUBLE"/>
        <result property="webUrl" column="web_url" jdbcType="VARCHAR"/>
        <result property="towerMark" column="tower_mark" jdbcType="VARCHAR"/>
        <result property="markTag" column="mark_tag" jdbcType="VARCHAR"/>
        <result property="startMarkNum" column="start_mark_num" jdbcType="INTEGER"/>
        <result property="endMarkNum" column="end_mark_num" jdbcType="INTEGER"/>
    </resultMap>

    <delete id="deletePointCloudById">
        delete from ef_cloud where id = #{id}
    </delete>

    <select id="getCloudById" resultMap="EfCloudMap">
        select * from ef_cloud where id = #{id}
    </select>

    <delete id="deletepointCloudBytowermark" >
        delete from ef_cloud where tower_mark = #{towerMark}
    </delete>

    <select id="getPointCloudByTowerMark" resultMap="EfCloudMap">
        select * from ef_cloud where tower_mark = #{towerMark} ORDER BY update_time DESC LIMIT 1
    </select>

    <select id="getPointCloudByTagAndMark" resultMap="EfCloudMap">
        SELECT *
        FROM ef_cloud
        WHERE mark_tag = #{markTag}
          AND #{markNum} BETWEEN LEAST(start_mark_num, end_mark_num) AND GREATEST(start_mark_num, end_mark_num)
        ORDER BY create_time DESC
            LIMIT 1;
    </select>

    <select id="getPointcloudlist" resultMap="EfCloudMap">
        select * from ef_cloud
        <where>
            <if test="mark!=null">
                mark LIKE CONCAT('%', #{mark}, '%')
            </if>
            <if test="1==1">
                AND create_time BETWEEN #{startDate} AND #{endDate}
            </if>
        </where>
        ORDER BY update_time DESC
    </select>


    <insert id="insertOrUpdatePointCloud"  keyProperty="id" useGeneratedKeys="true">
        insert into ef_cloud(id, mark, update_time, create_time, origin_type, origin_size, origin_cloud_url, amend_type, amend_cloud_url, amend_size, formats, web_size, web_url, tower_mark, mark_tag, start_mark_num, end_mark_num)
        values(#{id}, #{mark}, #{updateTime}, #{createTime}, #{originType}, #{originSize}, #{originCloudUrl}, #{amendType}, #{amendCloudUrl}, #{amendSize}, #{formats}, #{webSize}, #{webUrl}, #{towerMark}, #{markTag}, #{startMarkNum}, #{endMarkNum})
        on duplicate key update update_time = #{updateTime}, origin_type = #{originType}, origin_size = #{originSize}, origin_cloud_url = #{originCloudUrl}, amend_type = #{amendType}, amend_cloud_url = #{amendCloudUrl}, amend_size = #{amendSize}, formats = #{formats}, web_size = #{webSize}, web_url = #{webUrl}, tower_mark = #{towerMark}, mark_tag = #{markTag}, start_mark_num = #{startMarkNum}, end_mark_num = #{endMarkNum}
    </insert>


    <insert id="insertPointCloud" keyProperty="id" useGeneratedKeys="true">
        insert into ef_cloud(id, mark, update_time, create_time, origin_type, origin_size, origin_cloud_url, amend_type, amend_cloud_url, amend_size, formats, web_size, web_url, tower_mark, mark_tag, start_mark_num, end_mark_num)

        values(#{id}, #{mark}, #{updateTime}, #{createTime}, #{originType}, #{originSize}, #{originCloudUrl}, #{amendType}, #{amendCloudUrl}, #{amendSize}, #{formats}, #{webSize}, #{webUrl}, #{towerMark}, #{markTag}, #{startMarkNum}, #{endMarkNum})
    </insert>

    <select id="queryCloudByMark" resultMap="EfCloudMap">
        select * from ef_cloud where  tower_mark = #{towerMark}
    </select>

    <select id="querycloudByMark" resultMap="EfCloudMap">
        select * from ef_cloud where  mark = #{mark}
    </select>

    <select id="queryCloudByFormats" resultMap="EfCloudMap">
        select * from ef_cloud where  formats = #{formats}
    </select>

</mapper>

